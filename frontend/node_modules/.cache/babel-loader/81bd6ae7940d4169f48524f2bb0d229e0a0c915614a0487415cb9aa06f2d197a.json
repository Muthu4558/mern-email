{"ast":null,"code":"var _jsxFileName = \"S:\\\\My Project\\\\mern-email\\\\frontend\\\\src\\\\components\\\\AssignTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchUsers, assignTask } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignTask = () => {\n  _s();\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDate, setTaskDate] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await fetchUsers();\n        setUsers(response.data);\n      } catch (error) {\n        console.error(\"Error fetching users\", error);\n      }\n    };\n    getUsers();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await assignTask({\n        taskTitle,\n        taskDate,\n        userId: selectedUser\n      });\n      setMessage(response.data.message);\n      setTaskTitle(\"\");\n      setTaskDate(\"\");\n      setSelectedUser(\"\");\n    } catch (error) {\n      setMessage(\"Error assigning task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assign Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: taskTitle,\n        onChange: e => setTaskTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: taskDate,\n        onChange: e => setTaskDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedUser,\n        onChange: e => setSelectedUser(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user._id,\n          children: user.name\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignTask, \"T5okIqydIzCFMf6B+dE+mjqgsLg=\");\n_c = AssignTask;\nexport default AssignTask;\nvar _c;\n$RefreshReg$(_c, \"AssignTask\");","map":{"version":3,"names":["React","useState","useEffect","fetchUsers","assignTask","jsxDEV","_jsxDEV","AssignTask","_s","taskTitle","setTaskTitle","taskDate","setTaskDate","users","setUsers","selectedUser","setSelectedUser","message","setMessage","getUsers","response","data","error","console","handleSubmit","e","preventDefault","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","user","_id","name","_c","$RefreshReg$"],"sources":["S:/My Project/mern-email/frontend/src/components/AssignTask.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchUsers, assignTask } from \"../api\";\r\n\r\nconst AssignTask = () => {\r\n  const [taskTitle, setTaskTitle] = useState(\"\");\r\n  const [taskDate, setTaskDate] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      try {\r\n        const response = await fetchUsers();\r\n        setUsers(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching users\", error);\r\n      }\r\n    };\r\n\r\n    getUsers();\r\n  }, []);\r\n    \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await assignTask({ taskTitle, taskDate, userId: selectedUser });\r\n      setMessage(response.data.message);\r\n      setTaskTitle(\"\");\r\n      setTaskDate(\"\");\r\n      setSelectedUser(\"\");\r\n    } catch (error) {\r\n      setMessage(\"Error assigning task\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Assign Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Title\"\r\n          value={taskTitle}\r\n          onChange={(e) => setTaskTitle(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={taskDate}\r\n          onChange={(e) => setTaskDate(e.target.value)}\r\n          required\r\n        />\r\n        <select value={selectedUser} onChange={(e) => setSelectedUser(e.target.value)} required>\r\n          <option value=\"\">Select User</option>\r\n          {users.map((user) => (\r\n            <option key={user._id} value={user._id}>\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Assign Task</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}